name: Release

on:
  push:
    branches: ["main-dev"]

env:
  BUILD_TYPE: Release
  GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
  

permissions:
  contents: write
  pages: write
  id-token: write


jobs:
  versioning:
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
    - uses: actions/setup-node@v3
    - run: npm install && npx semantic-release


  build_conan_packages_amd64:
    name: Build Conan Package for linux amd64
    needs: versioning
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
        ref: 'main'
    - name: Install Essentials
      run: |
        sudo apt update
        sudo apt install -y python3 python3-dev python3-pip build-essential cmake

    - name: Get UStore 
      run: |
        git clone https://github.com/unum-cloud/ustore.git
        cd ustore/ && git checkout main-dev && git submodule update --init --recursive

    - name: Prepare CMake, Conan, and PyArrow
      run: python -m pip install --force-reinstall conan==1.60.1

    - name: Install UStore dependencies using Conan
      run: |
        sed -i 's/^\(.*\)cmake = CMake(self)/# \1cmake = CMake(self)/; s/^\(.*\)cmake.configure()/# \1cmake.configure()/; s/^\(.*\)cmake.build()/# \1cmake.build()\n       pass/' ./ustore/conanfile.py
        conan profile new --detect default
        conan profile update settings.compiler=gcc default
        conan profile update settings.compiler.version=11 default
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan create ./ustore unum/x86_linux --build=missing

    - name: Zip Conan packages
      run: |
        cd ~/.conan && tar -czvf ustore_deps_x86_linux.tar.gz data/ && \
        mv ustore_deps_x86_linux.tar.gz /home/runner/work/ustore-deps/ustore-deps/
                
    - name: Upload archives
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: ustore_deps_x86_linux.tar.gz
        update_latest_release: true


  build_conan_packages_python_amd64:
    name: Build Conan Package for linux amd64 Python SDK
    needs: versioning
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
        ref: 'main'

    - name: Install Essentials
      run: |
        sudo apt update
        sudo apt install -y python3 python3-dev python3-pip build-essential cmake

    - name: Get UStore 
      run: |
        git clone https://github.com/unum-cloud/ustore.git
        cd ustore/ && git checkout main-dev && git submodule update --init --recursive
    
    - name: Move Conanfile
      run: mv conanfile.py ustore/

    - name: Prepare CMake
      run: python -m pip install --force-reinstall conan==1.60.1

    - name: Install UStore dependencies using Conan
      run: |
        conan profile new --detect default
        conan profile update settings.compiler=gcc default
        conan profile update settings.compiler.version=11 default
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan create ./ustore unum/x86_linux --build=missing

    - name: Zip Conan packages
      run: |
        cd ~/.conan && tar -czvf ustore_deps_x86_linux_python.tar.gz data/ && \
        mv ustore_deps_x86_linux_python.tar.gz /home/runner/work/ustore-deps/ustore-deps/
                
    - name: Upload archives
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: ustore_deps_x86_linux_python.tar.gz
        update_latest_release: true


  build_conan_packages_arm64:
    name: Build conan package for linux arm64
    runs-on: ubuntu-latest
    needs: versioning
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: 'main-dev'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get docker daemon IP
        id: dockerip
        run: |
          docker_ip=$(ip addr show docker0 | grep -Po 'inet \K[\d.]+') && \
          echo "docker_ip=$docker_ip" >> "$GITHUB_OUTPUT"

      - name: Set new password for runner user
        id: userpass
        run: |
          user_pass="1122"
          echo "runner:$user_pass" | sudo chpasswd
          echo "user_pass=$user_pass" >> "$GITHUB_OUTPUT"

      - name: Create conan packages using buildx
        run: |
          docker buildx create --use
          docker buildx build \
          --platform "linux/arm64" \
          --build-arg docker_ip=${{ steps.dockerip.outputs.docker_ip }} \
          --build-arg user_pass=$${{ steps.userpass.outputs.user_pass }} \
          --file ./Dockerfile \
          --tag unum/ustore-deps:latest \
          --output type=registry .

      - name: Upload archives
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ustore_deps_x86_linux.tar.gz; ustore_deps_arm_linux.tar.gz
          update_latest_release: true